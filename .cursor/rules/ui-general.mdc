---
description: 
globs: 
alwaysApply: true
---
---
description: 
globs: 
alwaysApply: true
---
- Note: These defaults apply to initial widget creation. Manual customization is allowed when needed.

## Regler for spacing

# Forbyd brug af SizedBox til spacing (højde eller bredde)

forbid: SizedBox\(height:\s*\d+
forbid: SizedBox\(width:\s*\d+

# Tillad SizedBox() uden parametre eller med child (til specifikke layout-behov)

allow: SizedBox\(\)
allow: SizedBox\(child:

# Påkræv brug af Gap() for spacing

require: Gap\(

# Forbyd hårdkodede tal i Gap()

forbid: Gap\(\d+

# Påkræv brug af AppDimensionsTheme i Gap()

require: Gap\(AppDimensionsTheme

## UI and Styling

- Use AppTheme for consistent text styles
- Implement AppDimensionsTheme for spacing
- Use AppColors for color palette
- Follow Material 3 principles
- Use MediaQuery for responsiveness

## Internationalization (I18n)

- **NEVER use hardcoded strings**: All user-facing text must use I18nService for internationalization
- **Required Format**: `I18nService().t('key_name', fallback: 'Fallback text')`
- **Key Naming**: Use dot notation with screen prefixes (e.g., `screen_home.welcome_message`)
- **Always provide fallback**: Include descriptive Danish fallback text
- **Examples**:
  ```dart
  // Text widgets
  CustomText(text: I18nService().t('screen_home.title', fallback: 'Hjem'))
  
  // Button text
  CustomButton(text: I18nService().t('button.save', fallback: 'Gem'))
  
  // Form labels
  labelText: I18nService().t('form.email_label', fallback: 'E-mail adresse')
  ```

## Widget Defaults

## TextFormField:

- Must use AppTheme.getTextFieldDecoration by default
- Example: decoration: AppTheme.getTextFieldDecoration(context)

## ElevatedButton:

- Use CustomButton

## Knapper

- Skal bruge CustomButton
- Al funktionalitet i onpressed skal lægges ud i seperat funktion i filen.

## Text:

- Brug CustomText

## Container Styling:

- Must use AppTheme.getParentContainerStyle(context).applyToContainer for content containers
- Example:
  ```dart
  AppTheme.getParentContainerStyle(context).applyToContainer(
    child: YourWidget(),
  )
  ```

## AppBar:

- Must use AuthenticatedAppBar for authenticated screens
- Example:
  ```dart
  appBar: const AuthenticatedAppBar(title: 'Screen Title'),
  ```

## Keyboard Dismissal:

- For all screens, always wrap the body in a GestureDetector to dismiss keyboard when tapping outside
- **IMPORTANT:** Place GestureDetector at SCREEN level (in Scaffold body), NOT on individual widgets
- This ensures keyboard dismissal works when tapping anywhere on the screen
- Place GestureDetector around the entire body content in Scaffold
- This should be done on ALL screens since widgets may contain forms/input fields
- Example:
  ```dart
  body: GestureDetector(
    onTap: () {
      // Fjern focus fra alle input felter og luk keyboardet
      FocusScope.of(context).unfocus();
    },
    child: // Your body content here
  ),
  ```
